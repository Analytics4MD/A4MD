

def create_gmx_script(job, file_name='bench.mdp'):
    with open(file_name, 'w') as f:
        f.write('cpp                 =  /lib/cpp\n')
        f.write('define              =   \n')
        f.write('constraints         =  h-bonds\n')
        f.write('integrator          =  md\n')
        f.write('dt                  =  0.002	; ps !\n')
        f.write('nsteps              =  {}\n'.format(job.sp.simulation_time))
        f.write('\n')
        f.write('nstcomm             =  10\n')
        f.write('comm-mode           =  linear\n')
        f.write('comm-grps	    =  System\n')
        f.write('; output control\n')
        f.write('nstxout             =  10000\n')
        f.write('nstvout             =  0\n')
        f.write('nstfout             =  0\n')
        f.write('nstlog              =  1000\n')
        f.write('nstenergy           =  1000\n')
        if job.sp.job_type == 'traditional':
            f.write('nstxtcout           =  {}\n'.format(job.sp.data_dump_interval))
        else:
            f.write('nstxtcout           =  0\n')
        f.write('xtc_grps            =  {}\n'.format(job.sp.filter_group[0]))
        f.write('; non-bonded interactions\n')
        f.write('cutoff-scheme       = Verlet\n')
        f.write('nstcalcenergy       = 10\n')
        f.write('ns_type             =  grid\n')
        f.write('coulombtype         =  PME\n')
        f.write('rcoulomb            =  1.2\n')
        f.write('vdwtype             =  cut-off \n')
        f.write('rvdw 	 	    =  1.2\n')
        f.write('vdw-modifier        =  Potential-shift-Verlet\n')
        f.write('DispCorr	    = EnerPres	\n')
        f.write('\n')
        f.write('; temperature coupling\n')
        f.write('Tcoupl              =  Nose-Hoover\n')
        f.write('tc-grps		    =  Protein_NA_bound  Water_ions  Lipids\n')
        f.write('tau_t               =  0.2	0.2    0.2\n')
        f.write('ref_t               =  {}	{}    {}\n'.format(job.sp.T,job.sp.T,job.sp.T))
        f.write('nsttcouple          =  5\n')
        f.write('; Energy monitoring\n')
        f.write(';energygrps          = Protein Water \n')
        f.write('; Pressure coupling\n')
        f.write('Pcoupl              =  Parrinello-Rahman\n')
        f.write('Pcoupltype          =  semiisotropic\n')
        f.write('tau_p               =  5.0\n')
        f.write('compressibility     =  4.5e-5   4.5e-5\n')
        f.write('ref_p               =  {}  {}\n'.format(job.sp.P,job.sp.P))
        f.write('refcoord_scaling    = com\n')

